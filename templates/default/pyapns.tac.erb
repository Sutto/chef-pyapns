# Auto generated by Chef at <%= Time.now %>. Do not edit directly.

config_file = '<%= @config_file %>'

# you don't need to change anything below this line really

import twisted.application, twisted.web, twisted.application.internet
import pyapns.server, pyapns._json
import os

def discoverAppConfiguration(inside):
  apps = []
  root_dir = os.path.abspath(inside)
  for file in os.listdir(root_dir):
    path = os.path.join(root_dir, file)
    if os.path.isfile(path):
      with open(path) as f:
        apps.append(pyapns._json.loads(f.read()))
  return apps

with open(os.path.abspath(config_file)) as f:
    config = pyapns._json.loads(f.read())

application = twisted.application.service.Application("pyapns application")

resource = twisted.web.resource.Resource()
service = pyapns.server.APNSServer()

if not 'autoprovision' in config:
    config['autoprovision'] = []

if 'apps_path' in config:
    apps_path = config['apps_path']
    apps = discoverAppConfiguration(apps_path)
    config['autoprovision'].extend(apps)

# get automatic provisioning

for app in config['autoprovision']:
    service.xmlrpc_provision(app['app_id'], app['cert'], app['environment'], app['timeout'])

# get port from config or 7077
if 'port' in config:
    port = config['port']
else:
    port = 7077

resource.putChild('', service)
site = twisted.web.server.Site(resource)

server = twisted.application.internet.TCPServer(port, site)
server.setServiceParent(application)
